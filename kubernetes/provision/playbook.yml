---
- hosts: all
  become: yes
  pre_tasks:
    # install and config tsocks
    - name: install tsocks
      apt:
        name: tsocks
        state: present
    - name: config tsocks
      replace:
        path: /etc/tsocks.conf
        regexp: '^server = 192.168.0.1$'
        replace: 'server = 10.0.2.2'
    - name: install pre-requisite warez like socat conntrack
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - socat
        - conntrack
        #- python3-pip
    - name: install tools for certificate generation
      apt:
        default_release: buster
        name: "{{ packages }}"
      vars:
        packages:
        - golang-cfssl
      when: "'master' in group_names"
      
    - name: load br_netfilter right now
      modprobe:
        name: br_netfilter
        state: present
    - name: enable autoloading for br_netfilter
      lineinfile:
        path: /etc/modules
        regexp: '^br_netfilter$'
        line: 'br_netfilter'
    - name: turn swap off
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: turn swap off in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#]+\s+none\s+swap\s+.*)$'
        replace: '# \1'
    - name: turn vm.swappiness off
      sysctl:
        name: vm.swappiness
        value: 0
        sysctl_set: yes
        state: present
        reload: yes
    - name: turn ip_forward on
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
    - name: turn net.bridge.bridge-nf-call-ip6tables on
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
    - name: turn net.bridge.bridge-nf-call-iptables on
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

- hosts: master
  vars:
    sys_share_ca_dir: /usr/local/share/ca-certificates/jjhome
    kube_data_dir: /var/lib/kubernetes
  become: yes
  pre_tasks:
    - name: ensure {{ sys_share_ca_dir }} exists
      file:
        path: "{{ sys_share_ca_dir }}"
        state: directory
    - name: ensure {{ kube_data_dir }} exists
      file:
        path: "{{ kube_data_dir }}"
        state: directory
    # generate ownca certificate for signing
    - name: test if own ca is genereated
      stat:
        path: "{{ sys_share_ca_dir }}/ownca.crt"
      register: ownca
    - name: generate own ca
      shell: "{{ lookup('template', 'gen-ownca.sh') }}"
      when: ownca.stat.exists == False
  roles:
    - role: etcd
    - role: kube-master

  tasks:
    - name: install pre-requisite warez like nfs server
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - nfs-kernel-server
        - nfs-common

- hosts: slave
  become: yes
  roles:
    - role: kube-slave

  tasks:
    - name: install pre-requisite warez like nfs client
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - nfs-common

# vim: set ai nu nobk expandtab sw=2 ts=4 tw=72 syntax=yaml:
