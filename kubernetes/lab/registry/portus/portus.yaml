kind: PersistentVolume
apiVersion: v1
metadata:
  name: registry-pv
  labels:
    type: local
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: kbm1.kube.vn
    path: /var/nfs/registry
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: registry-config
  namespace: kube-system
data:
  htpassword: |-
    bitmover:$2y$05$h3F6w4V6DRDZd7g0cPI8AeO/W8RBwAh5iHn/r17yaicjaVA0feCx2
  config.yml: |-
    version: 0.1
    storage:
        filesystem:
            rootdirectory: /var/lib/registry
            maxthreads: 100
        delete:
            enabled: false
    redirect:
        disable: false
    maintenance:
        uploadpurging:
            enabled: true
            age: 168h
            interval: 24h
            dryrun: false
            readonly:
                enabled: false
    http:
      addr: :5000
      tls:
        certificate: /certs/etcd-cert
        key: /certs/etcd-key
    auth:
        htpasswd:
            realm: jjhome-docker-registry-auth
            path: /etc/registry/htpasswd
    notifications:
      endpoints:
        - name: portus
          url: https://my.portus/v2/webhooks/events
          timeout: 500ms
          threshold: 5
          backoff: 1s
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry2
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: registry2
    spec:
      containers:
      - name: registry2
        image: registry:2
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /certs
          name: certs-conf
        - mountPath: /etc/registry/
          name: registry-conf
        - mountPath: /var/lib/registry
          name: registry-data
      volumes:
      - name: certs-conf
        secret:
          secretName: calico-etcd-secrets
      - name: registry-conf
        configMap:
          name: registry-config
      - name: registry-data
        persistentVolumeClaim:
          claimName: registry-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: kube-system
spec:
  type: NodePort
  ports:
   - port: 443
     targetPort: 443
     nodePort: 32443
  selector:
    app: registry2
